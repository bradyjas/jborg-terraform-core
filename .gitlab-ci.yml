stages:
- Initialization
- Integration Tests
- Plan Deployment
- Apply Changes


## Build Image Templates

.terraform-template:
  image:
    name: hashicorp/terraform:light
    entrypoint:
    - '/usr/bin/env'
    - 'PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin'
  cache:
    key: terraform-${CI_COMMIT_REF_SLUG}
    policy: pull
    paths:
    - .terraform/
  variables:
    PLANFILE: planfile

.tflint-template:
  image:
    name: wata727/tflint:latest
  cache:
    key: terraform-${CI_COMMIT_REF_SLUG}
    policy: pull
    paths:
    - .terraform/


## Jobs

init:
  stage: Initialization
  extends: .terraform-template
  cache:
    policy: pull-push
  script:
  - terraform -version
  - |
    terraform init -input=false \
    -backend-config="bucket=$BACKEND_BUCKET" \
    -backend-config="dynamodb_table=$BACKEND_TABLE" \
    -backend-config="region=$BACKEND_REGION"
  - terraform get -update=true

validate:
  stage: Integration Tests
  extends: .terraform-template
  script:
  - terraform validate

tflint:
  stage: Integration Tests
  extends: .tflint-template
  script:
  - tflint -v
  - tflint --error-with-issues
  except:
    refs:
    - master

plan:
  stage: Plan Deployment
  extends: .terraform-template
  script:
  - terraform plan -input=false -out=$PLANFILE
  artifacts:
    name: planfile
    expire_in: 1 day
    paths:
    - $PLANFILE

apply:
  stage: Apply Changes
  extends: .terraform-template
  dependencies:
  - plan
  script:
  - terraform apply -input=false $PLANFILE
  only:
    refs:
    - master
